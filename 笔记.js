/** 
  前端权限控制：
    用户可能对应多种角色 每一个角色可能对应多种权限 
    用户把权限分配给角色 再把角色分配给用户
    本质上来说就是控制视图层的展示(导航菜单的查看权限)和前端发送请求(页面增删改操作按钮的操作权限)
    目的：
      1-降低非法操作的可能性 (某按钮没权限,点击了请求也会失败)
      2-尽量排除不必要的请求，减轻服务器压力 (没权限的请求，压根不应该发送)
      3-提高用户体验 (根据用户权限展示用户权限内的内容)
    主要思路：
      1-菜单栏控制
        没具备某些菜单的权限，就不应该显示
        登录成功时会返回权限相关数据，根据相关数据显示对应菜单，点击菜单才会显示相对应页面
      2-界面控制
        如果用户没有登录,在地址栏手动输入地址，则需要跳转到登录界面
        如果登录了，地址栏输入的是权限之外的地址，则需跳转到404界面
      3-按钮的控制
        在菜单栏界面 根据用户权限数据 展示可操作的按钮
      4-请求和响应的控制
        如果用户通过非常规操作(比如说浏览器调试工具)将某些禁用掉的按钮变成了启用状态，
        此时点击发送的请求也应该被前端拦截
      5-
    






*/
